<div class="table-responsive">
    <table class="table table-striped">
        <thead class="thead-light">
            <tr>
                <th>Name</th>
                <th>Genre</th>
                <th>Release Date</th>
                <th>
                    <input type="checkbox" @bind="displayButtons" />
                </th>
            </tr>
        </thead>
        <tbody>
            <GenericList ListOfItems="Games">
                <ItemTemplate Context="game">
                    <IndividualGame Game="game" IsTable="true" DisplayButtons="displayButtons" DeleteGame="DeleteTheGame"/>
                </ItemTemplate>
            </GenericList>
        </tbody>
    </table>
</div>


@code {
    [Parameter] public List<Game> Games { get; set; }


    bool displayButtons = false;

    void DeleteTheGame(Game game)
    {
        Games.Remove(game);
    }

    /*-------------------------------*/

    protected override void OnInitialized() // вызывается при инициализации на сервере
    {
        Console.WriteLine($"1. OnInitialized(). Games count: {Games?.Count}.");
    }
    protected override void OnParametersSet() // вызывается после метода инициализации и каждый раз после изменений значений параметра
    {
        Console.WriteLine($"2. OnParametersSet(). Games count: {Games?.Count}.");
    }
    protected override void OnAfterRender(bool firstRender) // вызывается после отрисовки, присутствует параметр, определяющий первая ли это отрисовка
    {
        Console.WriteLine($"3. OnAfterRender(bool firstRender). First render? : {firstRender}");
    }

    protected override bool ShouldRender() // управление возможностью повторной отрисовки компонента
    {
        return true;
    }
}